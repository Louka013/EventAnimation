// Generated by view binder compiler. Do not edit!
package com.eventanimation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.eventanimation.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFlashDisplayBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton backButton;

  @NonNull
  public final TextView countdownTimer;

  @NonNull
  public final MaterialButton emergencyStopButton;

  @NonNull
  public final ConstraintLayout flashBackground;

  @NonNull
  public final TextView flashIndicator;

  @NonNull
  public final LinearLayout flashInfoContainer;

  @NonNull
  public final TextView flashPatternText;

  @NonNull
  public final TextView participantCount;

  @NonNull
  public final TextView phaseIndicator;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView syncStatus;

  private FragmentFlashDisplayBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton backButton, @NonNull TextView countdownTimer,
      @NonNull MaterialButton emergencyStopButton, @NonNull ConstraintLayout flashBackground,
      @NonNull TextView flashIndicator, @NonNull LinearLayout flashInfoContainer,
      @NonNull TextView flashPatternText, @NonNull TextView participantCount,
      @NonNull TextView phaseIndicator, @NonNull ProgressBar progressBar,
      @NonNull TextView syncStatus) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.countdownTimer = countdownTimer;
    this.emergencyStopButton = emergencyStopButton;
    this.flashBackground = flashBackground;
    this.flashIndicator = flashIndicator;
    this.flashInfoContainer = flashInfoContainer;
    this.flashPatternText = flashPatternText;
    this.participantCount = participantCount;
    this.phaseIndicator = phaseIndicator;
    this.progressBar = progressBar;
    this.syncStatus = syncStatus;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFlashDisplayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFlashDisplayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_flash_display, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFlashDisplayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_button;
      MaterialButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.countdown_timer;
      TextView countdownTimer = ViewBindings.findChildViewById(rootView, id);
      if (countdownTimer == null) {
        break missingId;
      }

      id = R.id.emergency_stop_button;
      MaterialButton emergencyStopButton = ViewBindings.findChildViewById(rootView, id);
      if (emergencyStopButton == null) {
        break missingId;
      }

      ConstraintLayout flashBackground = (ConstraintLayout) rootView;

      id = R.id.flash_indicator;
      TextView flashIndicator = ViewBindings.findChildViewById(rootView, id);
      if (flashIndicator == null) {
        break missingId;
      }

      id = R.id.flash_info_container;
      LinearLayout flashInfoContainer = ViewBindings.findChildViewById(rootView, id);
      if (flashInfoContainer == null) {
        break missingId;
      }

      id = R.id.flash_pattern_text;
      TextView flashPatternText = ViewBindings.findChildViewById(rootView, id);
      if (flashPatternText == null) {
        break missingId;
      }

      id = R.id.participant_count;
      TextView participantCount = ViewBindings.findChildViewById(rootView, id);
      if (participantCount == null) {
        break missingId;
      }

      id = R.id.phase_indicator;
      TextView phaseIndicator = ViewBindings.findChildViewById(rootView, id);
      if (phaseIndicator == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.sync_status;
      TextView syncStatus = ViewBindings.findChildViewById(rootView, id);
      if (syncStatus == null) {
        break missingId;
      }

      return new FragmentFlashDisplayBinding((ConstraintLayout) rootView, backButton,
          countdownTimer, emergencyStopButton, flashBackground, flashIndicator, flashInfoContainer,
          flashPatternText, participantCount, phaseIndicator, progressBar, syncStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
