/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/build.gradle:14: Warning: Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details. [OldTargetApi]
        targetSdk 34
        ~~~~~~~~~~~~

   Explanation for issues of type "OldTargetApi":
   When your application or sdk runs on a version of Android that is more
   recent than your targetSdkVersion specifies that it has been tested with,
   various compatibility modes kick in. This ensures that your application
   continues to work, but it may look out of place. For example, if the
   targetSdkVersion is less than 14, your app may get an option button in the
   UI.

   To fix this issue, set the targetSdkVersion to the highest available value.
   Then test your app to make sure everything works correctly. You may want to
   consult the compatibility notes to see what changes apply to each version
   you are adding support for:
   https://developer.android.com/reference/android/os/Build.VERSION_CODES.html
   as well as follow this guide:
   https://developer.android.com/distribute/best-practices/develop/target-sdk.
   html

   https://developer.android.com/distribute/best-practices/develop/target-sdk.html

/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/xml/backup_rules.xml:5: Error: Subdirectories are not allowed for domain database [FullBackupContent]
    <exclude domain="database" path="databases/firebase_*"/>
                                     ~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/xml/data_extraction_rules.xml:6: Error: Subdirectories are not allowed for domain database [FullBackupContent]
        <exclude domain="database" path="databases/firebase_*"/>
                                         ~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "FullBackupContent":
   Ensures that <data-extraction-rules> and <full-backup-content> files, which
   configure backup options, are valid.

   https://android-developers.googleblog.com/2015/07/auto-backup-for-apps-made-simple.html

/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/gradle/wrapper/gradle-wrapper.properties:3: Warning: A newer version of Gradle than 8.12 is available: 8.14.3 [AndroidGradlePluginVersion]
distributionUrl=https\://services.gradle.org/distributions/gradle-8.12-bin.zip
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "AndroidGradlePluginVersion":
   This detector looks for usage of the Android Gradle Plugin where the
   version you are using is not the current stable release. Using older
   versions is fine, and there are cases where you deliberately want to stick
   with an older version. However, you may simply not be aware that a more
   recent version is available, and that is what this lint check helps find.

/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/build.gradle:9: Warning: A newer version of compileSdkVersion than 34 is available: 35 [GradleDependency]
    compileSdk 34
    ~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/build.gradle:40: Warning: A newer version of androidx.core:core-ktx than 1.12.0 is available: 1.16.0 [GradleDependency]
    implementation 'androidx.core:core-ktx:1.12.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/build.gradle:41: Warning: A newer version of androidx.appcompat:appcompat than 1.6.1 is available: 1.7.1 [GradleDependency]
    implementation 'androidx.appcompat:appcompat:1.6.1'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/build.gradle:42: Warning: A newer version of com.google.android.material:material than 1.10.0 is available: 1.12.0 [GradleDependency]
    implementation 'com.google.android.material:material:1.10.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/build.gradle:43: Warning: A newer version of androidx.constraintlayout:constraintlayout than 2.1.4 is available: 2.2.1 [GradleDependency]
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/build.gradle:46: Warning: A newer version of androidx.navigation:navigation-fragment-ktx than 2.7.5 is available: 2.9.1 [GradleDependency]
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.5'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/build.gradle:47: Warning: A newer version of androidx.navigation:navigation-ui-ktx than 2.7.5 is available: 2.9.1 [GradleDependency]
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.5'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/build.gradle:50: Warning: A newer version of androidx.lifecycle:lifecycle-viewmodel-ktx than 2.7.0 is available: 2.9.1 [GradleDependency]
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/build.gradle:51: Warning: A newer version of androidx.lifecycle:lifecycle-livedata-ktx than 2.7.0 is available: 2.9.1 [GradleDependency]
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.7.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/build.gradle:54: Warning: A newer version of com.google.firebase:firebase-bom than 32.6.0 is available: 33.16.0 [GradleDependency]
    implementation platform('com.google.firebase:firebase-bom:32.6.0')
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/build.gradle:60: Warning: A newer version of org.jetbrains.kotlinx:kotlinx-coroutines-android than 1.7.1 is available: 1.7.3 [GradleDependency]
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/build.gradle:63: Warning: A newer version of androidx.test.ext:junit than 1.1.5 is available: 1.2.1 [GradleDependency]
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/build.gradle:64: Warning: A newer version of androidx.test.espresso:espresso-core than 3.5.1 is available: 3.6.1 [GradleDependency]
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/values/strings.xml:4: Warning: The resource R.string.event_details_label appears to be unused [UnusedResources]
    <string name="event_details_label">Event Details</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/values/strings.xml:5: Warning: The resource R.string.seat_info_label appears to be unused [UnusedResources]
    <string name="seat_info_label">Seat Information</string>
            ~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/values/strings.xml:6: Warning: The resource R.string.event_details_hint appears to be unused [UnusedResources]
    <string name="event_details_hint">Enter event name and venue</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/values/strings.xml:7: Warning: The resource R.string.seat_info_hint appears to be unused [UnusedResources]
    <string name="seat_info_hint">e.g., Section A, Row 5, Seat 12</string>
            ~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/values/strings.xml:10: Warning: The resource R.string.loading appears to be unused [UnusedResources]
    <string name="loading">Loading...</string>
            ~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/values/strings.xml:11: Warning: The resource R.string.error_invalid_seat appears to be unused [UnusedResources]
    <string name="error_invalid_seat">Invalid seat information format</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/values/strings.xml:12: Warning: The resource R.string.error_empty_fields appears to be unused [UnusedResources]
    <string name="error_empty_fields">Please fill in all fields</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/values/strings.xml:13: Warning: The resource R.string.error_network appears to be unused [UnusedResources]
    <string name="error_network">Network error. Please check your connection.</string>
            ~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/values/strings.xml:14: Warning: The resource R.string.error_firebase appears to be unused [UnusedResources]
    <string name="error_firebase">Firebase error. Please try again.</string>
            ~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

   Available options:

   **skip-libraries** (default is true):
   Whether the unused resource check should skip reporting unused resources in libraries.

   Many libraries will declare resources that are part of the library surface; other modules depending on the library will also reference the resources. To avoid reporting all these resources as unused (in the context of a library), the unused resource check normally skips reporting unused resources in libraries. Instead, run the unused resource check on the consuming app module (along with `checkDependencies=true`).

   However, there are cases where you want to check that all the resources declared in a library are used; in that case, you can disable the skip option.

   To configure this option, use a `lint.xml` file with an <option> like this:

   ```xml
   <lint>
       <issue id="UnusedResources">
           <option name="skip-libraries" value="true" />
       </issue>
   </lint>
   ```

/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/values/strings.xml:10: Warning: Replace "..." with ellipsis character (…, &#8230;) ? [TypographyEllipsis]
    <string name="loading">Loading...</string>
                           ~~~~~~~~~~

   Explanation for issues of type "TypographyEllipsis":
   You can replace the string "..." with a dedicated ellipsis character,
   ellipsis character (u2026, &#8230;). This can help make the text more
   readable.

   https://en.wikipedia.org/wiki/Ellipsis

/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/mipmap-hdpi/ic_launcher_round.png: Warning: Launcher icon used as round icon did not have a circular shape [IconLauncherShape]
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/mipmap-mdpi/ic_launcher_round.png: Warning: Launcher icon used as round icon did not have a circular shape [IconLauncherShape]
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png: Warning: Launcher icon used as round icon did not have a circular shape [IconLauncherShape]
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png: Warning: Launcher icon used as round icon did not have a circular shape [IconLauncherShape]
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png: Warning: Launcher icon used as round icon did not have a circular shape [IconLauncherShape]

   Explanation for issues of type "IconLauncherShape":
   According to the Android Design Guide
   (https://d.android.com/r/studio-ui/designer/material/iconography) your
   launcher icons should "use a distinct silhouette", a "three-dimensional,
   front view, with a slight perspective as if viewed from above, so that
   users perceive some depth."

   The unique silhouette implies that your launcher icon should not be a
   filled square.

/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png: Warning: The image ic_launcher.png varies significantly in its density-independent (dip) size across the various density versions: mipmap-hdpi/ic_launcher.png: 32x32 dp (48x48 px), mipmap-mdpi/ic_launcher.png: 48x48 dp (48x48 px), mipmap-xhdpi/ic_launcher.png: 24x24 dp (48x48 px), mipmap-xxhdpi/ic_launcher.png: 16x16 dp (48x48 px), mipmap-xxxhdpi/ic_launcher.png: 12x12 dp (48x48 px) [IconDipSize]
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png: Warning: The image ic_launcher_round.png varies significantly in its density-independent (dip) size across the various density versions: mipmap-hdpi/ic_launcher_round.png: 32x32 dp (48x48 px), mipmap-mdpi/ic_launcher_round.png: 48x48 dp (48x48 px), mipmap-xhdpi/ic_launcher_round.png: 24x24 dp (48x48 px), mipmap-xxhdpi/ic_launcher_round.png: 16x16 dp (48x48 px), mipmap-xxxhdpi/ic_launcher_round.png: 12x12 dp (48x48 px) [IconDipSize]

   Explanation for issues of type "IconDipSize":
   Checks the all icons which are provided in multiple densities, all compute
   to roughly the same density-independent pixel (dip) size. This catches
   errors where images are either placed in the wrong folder, or icons are
   changed to new sizes but some folders are forgotten.

/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png: Warning: The following unrelated icon files have identical contents: ic_launcher.png, ic_launcher_round.png, ic_launcher.png, ic_launcher_round.png, ic_launcher.png, ic_launcher_round.png, ic_launcher.png, ic_launcher_round.png, ic_launcher.png, ic_launcher_round.png [IconDuplicates]

   Explanation for issues of type "IconDuplicates":
   If an icon is repeated under different names, you can consolidate and just
   use one of the icons and delete the others to make your application
   smaller. However, duplicated icons usually are not intentional and can
   sometimes point to icons that were accidentally overwritten or accidentally
   not updated.

/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/java/com/eventanimation/ui/ColorDisplayFragment.kt:101: Warning: Use the KTX extension property View.isVisible instead? [UseKtx]
            binding.backButton.visibility = if (binding.backButton.visibility == View.VISIBLE) {
                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/java/com/eventanimation/ui/ColorDisplayFragment.kt:101: Warning: Use the KTX extension property View.isVisible instead? [UseKtx]
            binding.backButton.visibility = if (binding.backButton.visibility == View.VISIBLE) {
                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/java/com/eventanimation/ui/ColorDisplayFragment.kt:169: Warning: Use the KTX extension function String.toColorInt instead? [UseKtx]
            val colorInt = Color.parseColor(colorToDisplay)
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/java/com/eventanimation/ui/ColorDisplayFragment.kt:183: Warning: Use the KTX extension function String.toColorInt instead? [UseKtx]
                val colorInt = Color.parseColor(targetColor)
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/java/com/eventanimation/data/SeatColorCalculator.kt:20: Warning: Use the KTX extension function String.toColorInt instead? [UseKtx]
            android.graphics.Color.parseColor(color)
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UseKtx":
   The Android KTX libraries decorates the Android platform SDK as well as
   various libraries with more convenient extension functions available from
   Kotlin, allowing you to use default parameters, named parameters, and
   more.

   Available options:

   **remove-defaults** (default is true):
   Whether to skip arguments that match the defaults provided by the extension.

   Extensions often provide default values for some of the parameters. For example:
   ```kotlin
   fun Path.readLines(charset: Charset = Charsets.UTF_8): List<String> { return Files.readAllLines(this, charset) }
   ```
   This lint check will by default automatically omit parameters that match the default, so if your code was calling

   ```kotlin
   Files.readAllLines(file, Charset.UTF_8)
   ```
   lint would replace this with
   ```kotlin
   file.readLines()
   ```
   rather than

   ```kotlin
   file.readLines(Charset.UTF_8
   ```
   You can turn this behavior off using this option.

   To configure this option, use a `lint.xml` file with an <option> like this:

   ```xml
   <lint>
       <issue id="UseKtx">
           <option name="remove-defaults" value="true" />
       </issue>
   </lint>
   ```

   **require-present** (default is true):
   Whether to only offer extensions already available.

   This option lets you only have lint suggest extension replacements if those extensions are already available on the class path (in other words, you're already depending on the library containing the extension method.)

   To configure this option, use a `lint.xml` file with an <option> like this:

   ```xml
   <lint>
       <issue id="UseKtx">
           <option name="require-present" value="true" />
       </issue>
   </lint>
   ```

/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/layout/fragment_color_display.xml:36: Warning: Hardcoded string "00:00:00", should use @string resource [HardcodedText]
        android:text="00:00:00"
        ~~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/layout/fragment_input.xml:29: Warning: Hardcoded string "Event", should use @string resource [HardcodedText]
        android:hint="Event"
        ~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/layout/fragment_input.xml:48: Warning: Hardcoded string "Section", should use @string resource [HardcodedText]
        android:hint="Section"
        ~~~~~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/layout/fragment_input.xml:67: Warning: Hardcoded string "Row", should use @string resource [HardcodedText]
        android:hint="Row"
        ~~~~~~~~~~~~~~~~~~
/home/baylibre/Documents/AndroidStudioProjects/EventAnimation/app/src/main/res/layout/fragment_input.xml:86: Warning: Hardcoded string "Seat Number", should use @string resource [HardcodedText]
        android:hint="Seat Number"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

2 errors, 43 warnings
